function plot_effect_size(allSubjectProbs, subjectAbProbs, normativeProbs,...
    taskNum, saveData, showPlots, dataFolder)
%PLOT_EFFECT_SIZE Plot effect size using the negentropy distribution for the 
%human and Bayesian populations.
%   Detailed explanation goes here

if ~exist('saveData', 'var')
    saveData = false;
end
if saveData && (~exist('dataFolder', 'var') || isempty(dataFolder))
    dataFolder = '';
end
if ~exist('showPlots', 'var') || showPlots
    visible = 'on';
else 
    visible = 'off';
end

useAbProbs = false;
if exist('subjectAbProbs', 'var') && ~isempty(subjectAbProbs)
    useAbProbs = true;
end

%% Compute subject and normative negentropy for all subjects on each trial stage
%% Subject negentropy is computed from probabilities generated by the A-B model with parameters fit to the pilot data.
%% Sigma is computed from the human pilot data.
numSubjects = size(allSubjectProbs, 1);
numTrials = size(allSubjectProbs, 2);
numStages = size(allSubjectProbs{1,1},1);
allSubjectNe = zeros(numSubjects, numTrials, numStages);
subjectAbNe = zeros(numSubjects, numTrials, numStages);
%subjectNeAvg = zeros(numSubjects, numTrials);
normativeNe = zeros(numSubjects, numTrials, numStages);
%normativeNeAvg = zeros(numSubjects, numTrials);
for subject = 1:numSubjects
    for trial = 1:numTrials
        allSubjectNe(subject, trial, :) = negentropy(allSubjectProbs{subject, trial});
        subjectAbNe(subject, trial, :) = negentropy(subjectAbProbs{subject, trial});        
        %subjectNeAvg(subject, trial) = sum(subjectNe(subject,trial,:))/numStages;
        
        normativeNe(subject, trial, :) = negentropy(normativeProbs{subject, trial});
       %normativeNeAvg(subject, trial) = sum(normativeNe(subject,trial,:))/numStages;
    end
end
%%%%

%% Compute the effect size using the distribution of negentropies at each trial stage
% At stage 1 (Tasks 1-4), we compute effect size as:
%  N_B (negentropy of Bayesian probs) - N_H (negentropy of human probs, either average across subjects or from A-B model) using 
% At stages 1 and above (Tasks 4-6), we compute effect size as:
%   |delta-N_B| (negentropy of difference between Bayesian probs from
%   current stage to previous stage) - |delta-N_H| (negentropy of
%   difference of human probs from one stage to the next, either average
%   over all subjects or from the A-B model)
effectSizeByTrial_Ne = zeros(numTrials);
effectSizeByStage_Ne = zeros(numTrials, numStages);
effectSizeAvgByTrial_Ne = zeros(numTrials, 1);
for trial = 1:numTrials
    effectSizeAvgByTrial_Ne(trial) = 0;
    for stage = 1:numStages        
        %Compute subject mean
        if useAbProbs   
            if stage == 1
                %Compute Ne
                subjectMean = sum(subjectAbNe(:, trial, stage))/length(subjectAbNe(:, trial, stage));
            else
                %Compute delta Ne
                subjectMean = sum(abs(subjectAbNe(:, trial, stage)-subjectAbNe(:, trial, stage-1)))/...
                    length(subjectAbNe(:, trial, stage));
            end            
        else
            if stage == 1
                %Compute Ne
                subjectMean = sum(allSubjectNe(:, trial, stage))/length(allSubjectNe(:, trial, stage));                
            else
                %Compute delta Ne
                subjectMean = sum(abs(allSubjectNe(:, trial, stage)-allSubjectNe(:, trial, stage-1)))/...
                    length(allSubjectNe(:, trial, stage));                
            end            
        end    
        
        %Compute normative mean
        if stage == 1
            %Compute Ne
            normativeMean = sum(normativeNe(:, trial, stage))/length(normativeNe(:, trial, stage));
        else
            %Compute delta Ne
            normativeMean = sum(abs(normativeNe(:, trial, stage)-normativeNe(:, trial, stage-1)))/...
                length(normativeNe(:, trial, stage));
        end
        
        %Comptue sigma and effect size
        sigma = std(allSubjectNe(:, trial, stage));        
        effectSizeByStage_Ne(trial, stage) = abs(subjectMean - normativeMean)/sigma;
        if stage == 1
            effectSizeByTrial_Ne(trial) = effectSizeByStage_Ne(trial, stage);
        end
    end
    effectSizeAvgByTrial_Ne(trial) = sum(effectSizeByStage_Ne(trial, :))/numStages;
end
effectSizeAvgAllTrials_Ne = sum(effectSizeAvgByTrial_Ne)/numTrials;
%%%%

%% Compute average subject and normative negentropy across all subjects for each trial and each trial stage
% subjectNeAvgByStage = zeros(numTrials, numStages);
% normativeNeAvgByStage = zeros(numTrials, numStages);
% subjectNeAvgByTrial = zeros(numTrials, 1);
% normativeNeAvgByTrial = zeros(numTrials, 1);
% for trial = 1:numTrials
%     for stage = 1:numStages
%         subjectNeAvgByStage(trial,stage) = sum(subjectNe(:,trial,stage))/numSubjects;
%         normativeNeAvgByStage(trial,stage) = sum(normativeNe(:,trial,stage))/numSubjects;
%     end
%     subjectNeAvgByTrial(trial) = sum(subjectNeAvgByStage(trial,:))/numStages;
%     normativeNeAvgByTrial(trial) = sum(normativeNeAvgByStage(trial,:))/numStages;
% end
%%%%

%% Create effect size plot showing the effect size for all stages in each trial (trials are subplots in a single figure)
taskName = ['Mission ' num2str(taskNum)];
if numStages > 1;
    maxEffectSize = max(max(effectSizeByStage));
    numRows = ceil(numTrials / 3);
    if numRows > 4
        numRows = 4;
    end
    %trialsPerFigure = numRows * 3;
    trialsPerFigure = 10;
    if trialsPerFigure < numTrials
        figName = [taskName, ', Trials 1-', num2str(trialsPerFigure),', All Stages: Effect Size   [Sample Size: ', num2str(numSubjects), ']'];
        fileName = [dataFolder, '\', taskName, '_Trials_1-', num2str(trialsPerFigure),'_All_Stages_Effect_Size'];
    else
        figName = [taskName, ', All Trials, All Stages: Effect Size   [Sample Size: ', num2str(numSubjects), ']'];
        fileName = [dataFolder, '\', taskName,'_All_Trials_All_Stages_Effect_Size'];
    end
    figPositionLarge = [60, 60, 800, 800];
    figHandle = figure('name', figName, 'position', figPositionLarge, 'NumberTitle', 'off', 'Visible', visible);
    title(figName);
    subplotNum = 1;
    for trial = 1:numTrials
        if subplotNum > trialsPerFigure
            %Create a new figure
            lastTrial = trial + trialsPerFigure;
            if lastTrial > numTrials
                lastTrial = numTrials;
            end
            figName = [taskName, ', Trials ', num2str(trial), '-', num2str(lastTrial), ', All Stages: Effect Size   [Sample Size: ', num2str(numSubjects), ']'];
            fileName = [dataFolder, '\', taskName, '_Trials_', num2str(trial), '-', num2str(lastTrial), '_All_Stages_Effect_Size'];
            figHandle = figure('name', figName, 'position', figPositionLarge, 'NumberTitle', 'off');
            title(figName);
            subplotNum = 1;
        end
        subplot(numRows, 3, subplotNum);
        set(gca, 'box', 'on');
        hold on;
        title(['Trial ' num2str(trial)]);
        xlim([0 numStages+1]);
        set(gca,'xtick', 1:numStages);
        %ymax = ylim;
        ylim([0 maxEffectSize]);
        %Plot effect size at each stage of the current trial
        plot(1:numStages, effectSizeByStage(trial,:), '-ob');
        subplotNum = subplotNum + 1;
        %Save figure
        if saveData
            hgsave(fileName, '-v6');
            saveas(figHandle, fileName, 'png');
        end
    end
end
%%%%

%% Create effect size plot showing the avg effect size for all trials
figPosition = [60, 60, 800, 600];
if numStages > 1
    figName = [taskName, ', Average For All Stages: Effect Size (Avg For Task = ',...
        num2str(effectSizeAvgAllTrials), ')   ', '[Sample Size: ', num2str(numSubjects), ']'];
else
    figName = [taskName, ', All Trial Blocks: Effect Size   [Sample Size: ', num2str(numSubjects), ']'];
end
figHandle = figure('name', figName, 'position', figPosition, 'NumberTitle', 'off', 'Visible', visible);
hold on;
title(figName);
if numStages > 1
    xlabel('Trial');
else
    xlabel('Trial Block');
end
xlim([0 numTrials+1]);
set(gca,'xtick', 1:numTrials);
%ymax = ylim;
%ylim([0 ymax(2)]);
%Plot effect size as a blue solid line
plot(effectSizeAvgByTrial, '-ob');
%Save figure
if saveData
    if numStages > 1
        fileName = [dataFolder, '\', taskName,'_AllStages_Effect_Size'];
    else
        fileName = [dataFolder, '\', taskName,'_Effect_Size'];
    end
    hgsave(fileName, '-v6');
    saveas(figHandle, fileName, 'png');
end
%%%%

end